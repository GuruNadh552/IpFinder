{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","ipAddress","setipAddress","ipCountry","setipCountry","ipregionName","setipRegionName","ipIsp","setipIsp","useEffect","axios","get","then","response","data","console","log","query","country","regionName","isp","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPA4CeA,MAxCf,WACE,MAAiCC,mBAAS,GAA1C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCF,mBAAS,IAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAuCJ,mBAAS,IAAhD,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAyBN,mBAAS,IAAlC,mBAAOO,EAAP,KAAaC,EAAb,KAeA,OAHAC,qBAAU,WAVRC,IAAMC,IAAI,2BAA2BC,MAAK,SAACC,GAEzC,IAAMC,EAAOD,EAASC,KACtBC,QAAQC,IAAIF,GACZZ,EAAaY,EAAKG,OAClBb,EAAaU,EAAKI,SAClBZ,EAAgBQ,EAAKK,YACrBX,EAASM,EAAKM,WAOhB,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,oDACqB,iCAASpB,OAE9B,iDACkB,iCAASE,OAE3B,8CACe,iCAASE,OAExB,6CACc,iCAASE,aCxBhBe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2eb29251.chunk.js","sourcesContent":["import axios from 'axios';\nimport './App.css';\nimport React,{useState,useEffect} from 'react';\n\nfunction App() {\n  const [ipAddress,setipAddress] = useState(0);\n  const [ipCountry,setipCountry] = useState('');\n  const [ipregionName,setipRegionName] = useState('');\n  const [ipIsp,setipIsp] = useState('');\n  const getIp = () => {\n    axios.get('http://ip-api.com/json/').then((response) =>\n    {\n      const data = response.data;\n      console.log(data);\n      setipAddress(data.query);\n      setipCountry(data.country);\n      setipRegionName(data.regionName);\n      setipIsp(data.isp);\n    });\n  }\n  useEffect(()=>{\n    getIp();\n  });\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Your IP Address is <strong>{ipAddress}</strong>\n        </p>\n        <p>\n          Your Country is <strong>{ipCountry}</strong>\n        </p>\n        <p>\n          Your City is <strong>{ipregionName}</strong>\n        </p>\n        <p>\n          Your ISP is <strong>{ipIsp}</strong>\n        </p>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}